'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var debug = require('debug');
var utils = require('../utils.js');
var errors = require('../errors.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);

const log = debug__default["default"]('ipfs:repo:migrator:repo:init');
async function isRepoInitialized(backends) {
  if (!backends) {
    throw new errors.MissingRepoOptionsError('Please pass repo options when trying to open a repo');
  }
  const root = backends.root;
  try {
    await root.open();
    const versionCheck = await root.has(utils.VERSION_KEY);
    const configCheck = await root.has(utils.CONFIG_KEY);
    if (!versionCheck || !configCheck) {
      log(`Version entry present: ${ versionCheck }`);
      log(`Config entry present: ${ configCheck }`);
      return false;
    }
    return true;
  } catch (e) {
    log('While checking if repo is initialized error was thrown: ' + e.message);
    return false;
  } finally {
    if (root !== undefined) {
      try {
        await root.close();
      } catch {
      }
    }
  }
}

exports.isRepoInitialized = isRepoInitialized;
