import { isRepoInitialized } from './init.js';
import {
  MissingRepoOptionsError,
  NotInitializedRepoError
} from '../errors.js';
import { VERSION_KEY } from '../utils.js';
import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
export async function getVersion(backends) {
  if (!await isRepoInitialized(backends)) {
    throw new NotInitializedRepoError('Repo is not initialized!');
  }
  const store = backends.root;
  await store.open();
  try {
    return parseInt(uint8ArrayToString(await store.get(VERSION_KEY)));
  } finally {
    await store.close();
  }
}
export async function setVersion(version, backends) {
  if (!backends) {
    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo');
  }
  const store = backends.root;
  await store.open();
  await store.put(VERSION_KEY, uint8ArrayFromString(String(version)));
  await store.close();
}