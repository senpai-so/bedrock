'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var HTTP = require('ipfs-utils/src/http.js');
var debug = require('debug');
var PQueue = require('p-queue');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var HTTP__default = /*#__PURE__*/_interopDefaultLegacy(HTTP);
var debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);
var PQueue__default = /*#__PURE__*/_interopDefaultLegacy(PQueue);

const log = Object.assign(debug__default["default"]('ipfs:preload'), { error: debug__default["default"]('ipfs:preload:error') });
const Queue = PQueue__default["default"].default ? PQueue__default["default"].default : PQueue__default["default"];
const httpQueue = new Queue({ concurrency: 4 });
function preload(url, options = {}) {
  log(url);
  return httpQueue.add(async () => {
    const res = await HTTP__default["default"].post(url, { signal: options.signal });
    const reader = res.body.getReader();
    try {
      while (true) {
        const {done} = await reader.read();
        if (done)
          return;
      }
    } finally {
      reader.releaseLock();
    }
  });
}

exports.preload = preload;
