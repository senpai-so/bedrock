export function queryPath({ key, startingPeer, ourPeerId, signal, query, alpha, pathIndex, numPaths, cleanUp, queryFuncTimeout, log }: {
    key: Uint8Array;
    startingPeer: PeerId;
    ourPeerId: PeerId;
    signal: AbortSignal;
    query: QueryFunc;
    alpha: number;
    pathIndex: number;
    numPaths: number;
    cleanUp: import('events').EventEmitter;
    queryFuncTimeout?: number | undefined;
    log: ReturnType<(name: string) => debug.Debugger & {
        error: debug.Debugger;
    }>;
}): AsyncGenerator<import("../types").QueryEvent, void, undefined>;
export type PeerId = import('peer-id');
export type QueryEvent = import('../types').QueryEvent;
export type QueryFunc = import('./types').QueryFunc;
//# sourceMappingURL=query-path.d.ts.map