/**
 * Receives notifications of new peers joining the network that support the DHT protocol
 */
export class TopologyListener extends EventEmitter {
    /**
     * Create a new network
     *
     * @param {object} params
     * @param {import('./types').Registrar} params.registrar
     * @param {string} params.protocol
     * @param {boolean} params.lan
     */
    constructor({ registrar, protocol, lan }: {
        registrar: import('./types').Registrar;
        protocol: string;
        lan: boolean;
    });
    _log: debug.Debugger & {
        error: debug.Debugger;
    };
    _running: boolean;
    _registrar: import("./types").Registrar;
    _protocol: string;
    /**
     * Start the network
     */
    start(): void;
    _registrarId: string | undefined;
    /**
     * Stop all network activity
     */
    stop(): void;
}
import { EventEmitter } from "events";
//# sourceMappingURL=topology-listener.d.ts.map