export type PeerId = import('peer-id');
export type Message = import('../../message').Message;
export type DHTMessageHandler = import('../types').DHTMessageHandler;
/**
 * @typedef {import('peer-id')} PeerId
 * @typedef {import('../../message').Message} Message
 * @typedef {import('../types').DHTMessageHandler} DHTMessageHandler
 */
/**
 * @implements {DHTMessageHandler}
 */
export class AddProviderHandler implements DHTMessageHandler {
    /**
     * @param {object} params
     * @param {PeerId} params.peerId
     * @param {import('../../providers').Providers} params.providers
     * @param {import('../../types').PeerStore} params.peerStore
     */
    constructor({ peerId, providers, peerStore }: {
        peerId: PeerId;
        providers: import('../../providers').Providers;
        peerStore: import('../../types').PeerStore;
    });
    _peerId: import("peer-id");
    _providers: import("../../providers").Providers;
    _peerStore: import("../../types").PeerStore;
    /**
     * @param {PeerId} peerId
     * @param {Message} msg
     */
    handle(peerId: PeerId, msg: Message): Promise<undefined>;
}
//# sourceMappingURL=add-provider.d.ts.map