export type Record = import('./record');
/**
 * @typedef {import('./record')} Record
 */
/**
 * Checks a record and ensures it is still valid.
 * It runs the needed validators.
 * If verification fails the returned Promise will reject with the error.
 *
 * @param {import('libp2p-interfaces/src/types').DhtValidators} validators
 * @param {Record} record
 */
export function verifyRecord(validators: import('libp2p-interfaces/src/types').DhtValidators, record: Record): Promise<void> | undefined;
export declare const validators: {
    pk: {
        func: (key: Uint8Array, publicKey: Uint8Array) => Promise<void>;
        sign: boolean;
    };
};
//# sourceMappingURL=validator.d.ts.map