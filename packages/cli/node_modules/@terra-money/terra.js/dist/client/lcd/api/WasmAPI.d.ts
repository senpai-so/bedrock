import { BaseAPI } from './BaseAPI';
import { AccAddress } from '../../../core/bech32';
import { APIParams } from '../APIRequester';
export interface CodeInfo {
    code_id: number;
    code_hash: string;
    creator: AccAddress;
}
export declare namespace CodeInfo {
    interface Data {
        code_id: string;
        code_hash: string;
        creator: AccAddress;
    }
}
export interface ContractInfo {
    code_id: number;
    address: AccAddress;
    creator: AccAddress;
    admin?: AccAddress;
    init_msg: any;
}
export declare namespace ContractInfo {
    interface Data {
        code_id: string;
        address: AccAddress;
        creator: AccAddress;
        admin: AccAddress;
        init_msg: any;
    }
}
export interface WasmParams {
    max_contract_size: number;
    max_contract_gas: number;
    max_contract_msg_size: number;
}
export declare namespace WasmParams {
    interface Data {
        max_contract_size: string;
        max_contract_gas: string;
        max_contract_msg_size: string;
    }
}
export declare class WasmAPI extends BaseAPI {
    codeInfo(codeID: number, params?: APIParams): Promise<CodeInfo>;
    contractInfo(contractAddress: AccAddress, params?: APIParams): Promise<ContractInfo>;
    contractQuery<T>(contractAddress: AccAddress, query: object, params?: APIParams): Promise<T>;
    parameters(params?: APIParams): Promise<WasmParams>;
}
