import { BaseAPI } from './BaseAPI';
import { APIParams, Pagination, PaginationOptions } from '../APIRequester';
import { IdentifiedClientState } from '../../../core/ibc/msgs/client/IdentifiedClient';
import { ClientConsensusStates } from '../../../core/ibc/msgs/client/ClientConsensusStates';
export interface IbcClientParams {
    allowed_clients: string[];
}
export declare namespace IbcClientParams {
    interface Data {
        allowed_clients: string[];
    }
}
export interface Status {
    status: string;
}
export declare namespace Status {
    interface Data {
        status: string;
    }
}
export declare class IbcClientAPI extends BaseAPI {
    /**
     * Gets the current transfer application parameters.
     */
    parameters(params?: APIParams): Promise<IbcClientParams>;
    client_states(params?: Partial<PaginationOptions & APIParams>): Promise<[IdentifiedClientState[], Pagination]>;
    client_state(client_id: string, params?: APIParams): Promise<IdentifiedClientState>;
    client_status(client_id: string, params?: APIParams): Promise<Status>;
    consensus_states(client_id: string, params?: Partial<PaginationOptions & APIParams>): Promise<[ClientConsensusStates, Pagination]>;
}
