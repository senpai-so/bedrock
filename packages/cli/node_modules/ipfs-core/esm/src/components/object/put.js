import * as dagPB from '@ipld/dag-pb';
import { CID } from 'multiformats/cid';
import { sha256 } from 'multiformats/hashes/sha2';
import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';
export function createPut({repo, preload}) {
  async function put(obj, options = {}) {
    const release = await repo.gcLock.readLock();
    try {
      const buf = dagPB.encode(obj);
      const hash = await sha256.digest(buf);
      const cid = CID.createV1(dagPB.code, hash);
      await repo.blocks.put(cid, buf, { signal: options.signal });
      if (options.preload !== false) {
        preload(cid);
      }
      if (options.pin) {
        await repo.pins.pinRecursively(cid, { signal: options.signal });
      }
      return cid;
    } finally {
      release();
    }
  }
  return withTimeoutOption(put);
}