import { createAdd } from './add.js';
import { createAddAll } from './add-all.js';
import { createLs } from './ls.js';
import { createRm } from './rm.js';
import { createRmAll } from './rm-all.js';
export class PinAPI {
  constructor({codecs, repo}) {
    const addAll = createAddAll({
      codecs,
      repo
    });
    this.addAll = addAll;
    this.add = createAdd({ addAll });
    const rmAll = createRmAll({
      codecs,
      repo
    });
    this.rmAll = rmAll;
    this.rm = createRm({ rmAll });
    this.ls = createLs({
      codecs,
      repo
    });
    this.remote = {
      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),
      ls: async function* (query, options = {}) {
        return Promise.reject(new Error('Not implemented'));
      },
      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),
      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),
      service: {
        add: (name, credentials) => Promise.reject(new Error('Not implemented')),
        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),
        ls: (options = {}) => Promise.reject(new Error('Not implemented'))
      }
    };
  }
}