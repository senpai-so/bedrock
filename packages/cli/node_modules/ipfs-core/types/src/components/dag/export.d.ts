/**
 * @typedef {import('../../types').Preload} Preload
 * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo
 * @typedef {import('@ipld/car/api').BlockWriter} BlockWriter
 * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions
 */
/**
 * @param {Object} config
 * @param {IPFSRepo} config.repo
 * @param {Preload} config.preload
 * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs
 */
export function createExport({ repo, preload, codecs }: {
    repo: IPFSRepo;
    preload: Preload;
    codecs: import('ipfs-core-utils/multicodecs').Multicodecs;
}): (root: CID, options?: import("ipfs-core-types/src/dag").ExportOptions | undefined) => AsyncIterable<Uint8Array>;
export type Preload = import('../../types').Preload;
export type IPFSRepo = import('ipfs-repo').IPFSRepo;
export type BlockWriter = import('@ipld/car/api').BlockWriter;
export type AbortOptions = import('ipfs-core-types/src/utils').AbortOptions;
//# sourceMappingURL=export.d.ts.map