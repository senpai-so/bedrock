/**
 * @param {object} context
 * @param {IPFSRepo} context.repo
 * @param {import('../../types').Preload} context.preload
 * @param {import('..').Options} context.options
 * @param {Multihashes} context.hashers
 * @returns {import('ipfs-core-types/src/files').API}
 */
export function createFiles({ repo, preload, hashers, options: constructorOptions }: {
    repo: IPFSRepo;
    preload: import('../../types').Preload;
    options: import('..').Options;
    hashers: Multihashes;
}): import('ipfs-core-types/src/files').API;
export type MultihashHasher = import('multiformats/hashes/interface').MultihashHasher;
export type Multihashes = import('ipfs-core-utils/multihashes').Multihashes;
export type IPFSRepo = import('ipfs-repo').IPFSRepo;
export type MfsContext = {
    repo: IPFSRepo;
    hashers: Multihashes;
};
//# sourceMappingURL=index.d.ts.map