'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('./components/index.js');
var crypto$1 = require('libp2p-crypto');
var isIpfs = require('is-ipfs');
var cid = require('multiformats/cid');
var multiaddr$1 = require('multiaddr');
var PeerId$1 = require('peer-id');
var globSourceImport = require('ipfs-utils/src/files/glob-source.js');
var urlSourceImport = require('ipfs-utils/src/files/url-source.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto$1);
var isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);
var PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId$1);
var globSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(globSourceImport);
var urlSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(urlSourceImport);

const create = index.create;
const crypto = crypto__default["default"];
const isIPFS = isIpfs__default["default"];
const CID = cid.CID;
const multiaddr = multiaddr$1.Multiaddr;
const PeerId = PeerId__default["default"];
const globSource = globSourceImport__default["default"];
const urlSource = urlSourceImport__default["default"];

exports.CID = CID;
exports.PeerId = PeerId;
exports.create = create;
exports.crypto = crypto;
exports.globSource = globSource;
exports.isIPFS = isIPFS;
exports.multiaddr = multiaddr;
exports.urlSource = urlSource;
