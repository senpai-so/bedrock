'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var drain = require('it-drain');
var Errors = require('datastore-core/errors');
var debug = require('debug');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var drain__default = /*#__PURE__*/_interopDefaultLegacy(drain);
var debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);

const log = Object.assign(debug__default["default"]('ipfs:ipns:dht-datastore'), { error: debug__default["default"]('ipfs:ipns:dht-datastore:error') });
class DHTDatastore {
  constructor(dht) {
    this._dht = dht;
  }
  async put(key, value) {
    try {
      await drain__default["default"](this._dht.put(key, value));
    } catch (err) {
      log.error(err);
      throw err;
    }
  }
  async get(key) {
    for await (const event of this._dht.get(key)) {
      if (event.name === 'VALUE') {
        return event.value;
      }
    }
    throw Errors.notFoundError();
  }
}

exports.DHTDatastore = DHTDatastore;
