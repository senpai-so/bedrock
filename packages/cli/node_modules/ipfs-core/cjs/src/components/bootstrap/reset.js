'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var getDefaultConfig = require('ipfs-core-config/config');
var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');
var multiaddr = require('multiaddr');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var getDefaultConfig__default = /*#__PURE__*/_interopDefaultLegacy(getDefaultConfig);

function createReset({repo}) {
  async function reset(options = {}) {
    const config = await repo.config.getAll(options);
    config.Bootstrap = getDefaultConfig__default["default"]().Bootstrap;
    await repo.config.replace(config);
    return { Peers: getDefaultConfig__default["default"]().Bootstrap.map(ma => new multiaddr.Multiaddr(ma)) };
  }
  return withTimeoutOption.withTimeoutOption(reset);
}

exports.createReset = createReset;
