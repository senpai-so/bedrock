'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var ipfsUnixfsExporter = require('ipfs-unixfs-exporter');
var errCode = require('err-code');
var utils = require('../utils.js');
var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');
var cid = require('multiformats/cid');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);

function createLs({repo, preload}) {
  async function* ls(ipfsPath, options = {}) {
    const legacyPath = utils.normalizeCidPath(ipfsPath);
    const pathComponents = legacyPath.split('/');
    if (options.preload !== false) {
      preload(cid.CID.parse(pathComponents[0]));
    }
    const ipfsPathOrCid = cid.CID.asCID(legacyPath) || legacyPath;
    const file = await ipfsUnixfsExporter.exporter(ipfsPathOrCid, repo.blocks, options);
    if (file.type === 'file') {
      yield utils.mapFile(file);
      return;
    }
    if (file.type === 'directory') {
      for await (const child of file.content()) {
        yield utils.mapFile(child);
      }
      return;
    }
    throw errCode__default["default"](new Error(`Unknown UnixFS type ${ file.type }`), 'ERR_UNKNOWN_UNIXFS_TYPE');
  }
  return withTimeoutOption.withTimeoutOption(ls);
}

exports.createLs = createLs;
