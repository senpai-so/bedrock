'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var dagPB = require('@ipld/dag-pb');
var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);

function createGet({repo, preload}) {
  async function get(cid, options = {}) {
    if (options.preload !== false) {
      preload(cid);
    }
    const block = await repo.blocks.get(cid, options);
    return dagPB__namespace.decode(block);
  }
  return withTimeoutOption.withTimeoutOption(get);
}

exports.createGet = createGet;
