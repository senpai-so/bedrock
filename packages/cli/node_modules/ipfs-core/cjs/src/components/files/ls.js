'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var ipfsUnixfsExporter = require('ipfs-unixfs-exporter');
var toMfsPath = require('./utils/to-mfs-path.js');
var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');
var map = require('it-map');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var map__default = /*#__PURE__*/_interopDefaultLegacy(map);

const toOutput = fsEntry => {
  const output = {
    cid: fsEntry.cid,
    name: fsEntry.name,
    type: fsEntry.type === 'directory' ? 'directory' : 'file',
    size: fsEntry.size
  };
  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {
    output.mode = fsEntry.unixfs.mode;
    output.mtime = fsEntry.unixfs.mtime;
  }
  return output;
};
function createLs(context) {
  async function* mfsLs(path, options = {}) {
    const mfsPath = await toMfsPath.toMfsPath(context, path, options);
    const fsEntry = await ipfsUnixfsExporter.exporter(mfsPath.mfsPath, context.repo.blocks);
    if (fsEntry.type === 'directory') {
      yield* map__default["default"](fsEntry.content(options), toOutput);
      return;
    }
    yield toOutput(fsEntry);
  }
  return withTimeoutOption.withTimeoutOption(mfsLs);
}

exports.createLs = createLs;
