'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var debug = require('debug');
var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');
var withMfsRoot = require('../files/utils/with-mfs-root.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);

const log = debug__default["default"]('ipfs:repo:gc');
function createGc({repo, hashers}) {
  async function* gc(options = {}) {
    const start = Date.now();
    let mfsRootCid;
    try {
      mfsRootCid = await withMfsRoot.loadMfsRoot({
        repo,
        hashers
      }, options);
      await repo.pins.pinRecursively(mfsRootCid);
      yield* repo.gc();
    } finally {
      if (mfsRootCid) {
        await repo.pins.unpin(mfsRootCid);
      }
    }
    log(`Complete (${ Date.now() - start }ms)`);
  }
  return withTimeoutOption.withTimeoutOption(gc);
}

exports.createGc = createGc;
