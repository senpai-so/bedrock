'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var withTimeoutOption = require('ipfs-core-utils/with-timeout-option');
var errCode = require('err-code');
var errors = require('../errors.js');
var get = require('dlv');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);
var get__default = /*#__PURE__*/_interopDefaultLegacy(get);

function createPubsub({network, config}) {
  const isEnabled = get__default["default"](config || {}, 'Pubsub.Enabled', true);
  return {
    subscribe: isEnabled ? withTimeoutOption.withTimeoutOption(subscribe) : notEnabled,
    unsubscribe: isEnabled ? withTimeoutOption.withTimeoutOption(unsubscribe) : notEnabled,
    publish: isEnabled ? withTimeoutOption.withTimeoutOption(publish) : notEnabled,
    ls: isEnabled ? withTimeoutOption.withTimeoutOption(ls) : notEnabled,
    peers: isEnabled ? withTimeoutOption.withTimeoutOption(peers) : notEnabled
  };
  async function subscribe(topic, handler, options = {}) {
    const {libp2p} = await network.use(options);
    return libp2p.pubsub.subscribe(topic, handler, options);
  }
  async function unsubscribe(topic, handler, options = {}) {
    const {libp2p} = await network.use(options);
    libp2p.pubsub.unsubscribe(topic, handler, options);
  }
  async function publish(topic, data, options = {}) {
    const {libp2p} = await network.use(options);
    if (!data) {
      throw errCode__default["default"](new Error('argument "data" is required'), 'ERR_ARG_REQUIRED');
    }
    await libp2p.pubsub.publish(topic, data);
  }
  async function ls(options = {}) {
    const {libp2p} = await network.use(options);
    return libp2p.pubsub.getTopics();
  }
  async function peers(topic, options = {}) {
    const {libp2p} = await network.use(options);
    return libp2p.pubsub.getSubscribers(topic);
  }
}
const notEnabled = async () => {
  throw new errors.NotEnabledError('pubsub not enabled');
};

exports.createPubsub = createPubsub;
