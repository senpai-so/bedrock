'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var key = require('interface-datastore/key');
var debug = require('debug');
var toString = require('uint8arrays/to-string');
var fromString = require('uint8arrays/from-string');
var level = require('./utils/level.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);

const log = debug__default["default"]('ipfs:repo:version');
const versionKey = new key.Key('version');
function version(store) {
  return {
    async exists() {
      return level.hasWithFallback(versionKey, store.has.bind(store), store);
    },
    async get() {
      const buf = await level.getWithFallback(versionKey, store.get.bind(store), store.has.bind(store), store);
      return parseInt(toString.toString(buf), 10);
    },
    set(version) {
      return store.put(versionKey, fromString.fromString(String(version)));
    },
    async check(expected) {
      const version = await this.get();
      log('comparing version: %s and %s', version, expected);
      const compatibleVersion = version === 6 && expected === 7 || expected === 6 && version === 7;
      return version === expected || compatibleVersion;
    }
  };
}

exports.version = version;
