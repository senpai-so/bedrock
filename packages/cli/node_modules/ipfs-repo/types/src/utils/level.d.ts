/**
 * @typedef {import('interface-datastore').Datastore} Datastore
 * @typedef {import('interface-datastore').Key} Key
 */
/**
 * @param {Key} key
 * @param {function (Key): Promise<boolean>} has
 * @param {Datastore} store
 * @returns {Promise<boolean>}
 */
export function hasWithFallback(key: Key, has: (arg0: Key) => Promise<boolean>, store: Datastore): Promise<boolean>;
/**
 * @param {import('interface-datastore').Key} key
 * @param {function (Key): Promise<Uint8Array>} get
 * @param {function (Key): Promise<boolean>} has
 * @param {import('interface-datastore').Datastore} store
 * @returns {Promise<Uint8Array>}
 */
export function getWithFallback(key: import('interface-datastore').Key, get: (arg0: Key) => Promise<Uint8Array>, has: (arg0: Key) => Promise<boolean>, store: import('interface-datastore').Datastore): Promise<Uint8Array>;
export type Datastore = import('interface-datastore').Datastore;
export type Key = import('interface-datastore').Key;
//# sourceMappingURL=level.d.ts.map