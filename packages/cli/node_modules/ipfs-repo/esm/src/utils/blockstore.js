import { Key } from 'interface-datastore/key';
import { CID } from 'multiformats';
import * as raw from 'multiformats/codecs/raw';
import errCode from 'err-code';
import { base32 } from 'multiformats/bases/base32';
import * as Digest from 'multiformats/hashes/digest';
export function cidToKey(c) {
  const cid = CID.asCID(c);
  if (cid == null) {
    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID');
  }
  const encoded = base32.encode(cid.multihash.bytes);
  return new Key('/' + encoded.slice(1).toUpperCase(), false);
}
export function keyToCid(key) {
  return CID.createV1(raw.code, keyToMultihash(key));
}
export function keyToMultihash(key) {
  return Digest.decode(base32.decode(`b${ key.toString().toLowerCase().substring(1) }`));
}