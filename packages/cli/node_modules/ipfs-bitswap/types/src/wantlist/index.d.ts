/**
 * @typedef {import('multiformats').CID} CID
 */
export class Wantlist {
    /**
     *
     * @param {import('../stats').Stats} [stats]
     */
    constructor(stats?: import("../stats").Stats | undefined);
    /** @type {Map<string, Entry>} */
    set: Map<string, Entry>;
    _stats: import("../stats").Stats | undefined;
    get length(): number;
    /**
     * @param {CID} cid
     * @param {number} priority
     * @param {import('../message/message').Message.Wantlist.WantType} wantType
     */
    add(cid: CID, priority: number, wantType: import('../message/message').Message.Wantlist.WantType): void;
    /**
     * @param {CID} cid
     */
    remove(cid: CID): void;
    /**
     * @param {string} cidStr
     */
    removeForce(cidStr: string): void;
    /**
     * @param {(entry:Entry, key:string) => void} fn
     */
    forEach(fn: (entry: Entry, key: string) => void): void;
    entries(): IterableIterator<[string, Entry]>;
    sortedEntries(): Map<string, Entry>;
    /**
     * @param {CID} cid
     */
    contains(cid: CID): boolean;
    /**
     * @param {CID} cid
     */
    get(cid: CID): Entry | undefined;
}
export namespace Wantlist {
    export { Entry };
}
export type CID = import('multiformats').CID;
import { WantListEntry as Entry } from "./entry.js";
//# sourceMappingURL=index.d.ts.map