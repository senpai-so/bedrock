export function createBitswap(libp2p: import('libp2p'), blockstore: Blockstore, options?: {
    statsEnabled?: boolean | undefined;
    statsComputeThrottleTimeout?: number | undefined;
    statsComputeThrottleMaxQueueSize?: number | undefined;
    hashLoader?: import("./types").MultihashHasherLoader | undefined;
} | undefined): IPFSBitswap;
export type IPFSBitswap = import('./types').IPFSBitswap;
export type MultihashHasherLoader = import('./types').MultihashHasherLoader;
export type PeerId = import('peer-id');
export type BitswapMessage = typeof import("./message");
export type Blockstore = import('interface-blockstore').Blockstore;
export type Pair = import('interface-blockstore').Pair;
export type Options = import('interface-blockstore').Options;
//# sourceMappingURL=index.d.ts.map