(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.BlockstoreCore = factory()}(typeof self !== 'undefined' ? self : this, function () {
var BlockstoreCore=(()=>{var Oe=Object.create;var _=Object.defineProperty;var Ue=Object.getOwnPropertyDescriptor;var Me=Object.getOwnPropertyNames;var ke=Object.getPrototypeOf,Ie=Object.prototype.hasOwnProperty;var ee=r=>_(r,"__esModule",{value:!0});var M=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),te=(r,e)=>{ee(r);for(var t in e)_(r,t,{get:e[t],enumerable:!0})},Ne=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Me(e))!Ie.call(r,n)&&n!=="default"&&_(r,n,{get:()=>e[n],enumerable:!(t=Ue(e,n))||t.enumerable});return r},k=r=>Ne(ee(_(r!=null?Oe(ke(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var oe=M((xt,ne)=>{"use strict";function re(r,e){for(let t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function Be(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return re(r,t)}catch(n){t.message=r.message,t.stack=r.stack;let o=function(){};return o.prototype=Object.create(Object.getPrototypeOf(r)),re(new o,t)}}ne.exports=Be});var ie=M((vt,se)=>{"use strict";var Ve=async r=>{for await(let e of r);};se.exports=Ve});var ce=M((Et,ae)=>{"use strict";var Le=async function*(r,e){for await(let t of r)await e(t)&&(yield t)};ae.exports=Le});var he=M((At,de)=>{"use strict";var Re=async function*(r,e){let t=0;if(!(e<1)){for await(let n of r)if(yield n,t++,t===e)return}};de.exports=Re});var le=M((St,fe)=>{"use strict";var Pe=async r=>{let e=[];for await(let t of r)e.push(t);return e};fe.exports=Pe});var bt={};te(bt,{BaseBlockstore:()=>I,Errors:()=>wt,MemoryBlockstore:()=>q});var G={};te(G,{abortedError:()=>Te,notFoundError:()=>W});var J=k(oe());function W(r){return r=r||new Error("Not Found"),(0,J.default)(r,"ERR_NOT_FOUND")}function Te(r){return r=r||new Error("Aborted"),(0,J.default)(r,"ERR_ABORTED")}var Q=k(ie()),C=k(ce()),X=k(he()),pe=k(le()),ue=(r,e)=>async function*(){yield*(await(0,pe.default)(r)).sort(e)}(),I=class{open(){return Promise.reject(new Error(".open is not implemented"))}close(){return Promise.reject(new Error(".close is not implemented"))}put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(let{key:n,value:o}of e)await this.put(n,o,t),yield{key:n,value:o}}async*getMany(e,t={}){for await(let n of e)yield this.get(n,t)}async*deleteMany(e,t={}){for await(let n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,o){e.push({key:n,value:o})},delete(n){t.push(n)},commit:async n=>{await(0,Q.default)(this.putMany(e,n)),e=[],await(0,Q.default)(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null&&(n=(0,C.default)(n,o=>o.key.toString().startsWith(e.prefix||""))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>(0,C.default)(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>ue(o,s),n)),e.offset!=null){let o=0;n=(0,C.default)(n,()=>o++>=(e.offset||0))}return e.limit!=null&&(n=(0,X.default)(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null&&(n=(0,C.default)(n,o=>o.toString().startsWith(e.prefix||""))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,s)=>(0,C.default)(o,s),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,s)=>ue(o,s),n)),e.offset!=null){let o=0;n=(0,C.default)(n,()=>o++>=e.offset)}return e.limit!=null&&(n=(0,X.default)(n,e.limit)),n}};function _e(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),a=s.charCodeAt(0);if(t[a]!==255)throw new TypeError(s+" is ambiguous");t[a]=o}var c=r.length,h=r.charAt(0),j=Math.log(c)/Math.log(256),l=Math.log(256)/Math.log(c);function z(i){if(i instanceof Uint8Array||(ArrayBuffer.isView(i)?i=new Uint8Array(i.buffer,i.byteOffset,i.byteLength):Array.isArray(i)&&(i=Uint8Array.from(i))),!(i instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(i.length===0)return"";for(var f=0,S=0,y=0,w=i.length;y!==w&&i[y]===0;)y++,f++;for(var b=(w-y)*l+1>>>0,p=new Uint8Array(b);y!==w;){for(var g=i[y],A=0,m=b-1;(g!==0||A<S)&&m!==-1;m--,A++)g+=256*p[m]>>>0,p[m]=g%c>>>0,g=g/c>>>0;if(g!==0)throw new Error("Non-zero carry");S=A,y++}for(var v=b-S;v!==b&&p[v]===0;)v++;for(var P=h.repeat(f);v<b;++v)P+=r.charAt(p[v]);return P}function R(i){if(typeof i!="string")throw new TypeError("Expected String");if(i.length===0)return new Uint8Array;var f=0;if(i[f]!==" "){for(var S=0,y=0;i[f]===h;)S++,f++;for(var w=(i.length-f)*j+1>>>0,b=new Uint8Array(w);i[f];){var p=t[i.charCodeAt(f)];if(p===255)return;for(var g=0,A=w-1;(p!==0||g<y)&&A!==-1;A--,g++)p+=c*b[A]>>>0,b[A]=p%256>>>0,p=p/256>>>0;if(p!==0)throw new Error("Non-zero carry");y=g,f++}if(i[f]!==" "){for(var m=w-y;m!==w&&b[m]===0;)m++;for(var v=new Uint8Array(S+(w-m)),P=S;m!==w;)v[P++]=b[m++];return v}}}function ze(i){var f=R(i);if(f)return f;throw new Error(`Non-${e} character`)}return{encode:z,decodeUnsafe:R,decode:ze}}var $e=_e,Fe=$e,ye=Fe;var jt=new Uint8Array(0);var me=(r,e)=>{if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0},D=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")};var we=class{constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},be=class{constructor(e,t,n){this.name=e,this.prefix=t,this.baseDecode=n}decode(e){if(typeof e=="string")switch(e[0]){case this.prefix:return this.baseDecode(e.slice(1));default:throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)}else throw Error("Can only multibase decode strings")}or(e){let t={[this.prefix]:this,...e.decoders||{[e.prefix]:e}};return new $(t)}},$=class{constructor(e){this.decoders=e}or(e){let t=e.decoders||{[e.prefix]:e};return new $({...this.decoders,...t})}decode(e){let t=e[0],n=this.decoders[t];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},ge=class{constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new we(e,t,n),this.decoder=new be(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},xe=({name:r,prefix:e,encode:t,decode:n})=>new ge(r,e,t,n),Z=({prefix:r,name:e,alphabet:t})=>{let{encode:n,decode:o}=ye(t,e);return xe({prefix:r,name:e,encode:n,decode:s=>D(o(s))})},Ke=(r,e,t,n)=>{let o={};for(let l=0;l<e.length;++l)o[e[l]]=l;let s=r.length;for(;r[s-1]==="=";)--s;let a=new Uint8Array(s*t/8|0),c=0,h=0,j=0;for(let l=0;l<s;++l){let z=o[r[l]];if(z===void 0)throw new SyntaxError(`Non-${n} character`);h=h<<t|z,c+=t,c>=8&&(c-=8,a[j++]=255&h>>c)}if(c>=t||255&h<<8-c)throw new SyntaxError("Unexpected end of data");return a},Je=(r,e,t)=>{let n=e[e.length-1]==="=",o=(1<<t)-1,s="",a=0,c=0;for(let h=0;h<r.length;++h)for(c=c<<8|r[h],a+=8;a>t;)a-=t,s+=e[o&c>>a];if(a&&(s+=e[o&c<<t-a]),n)for(;s.length*t&7;)s+="=";return s},x=({name:r,prefix:e,bitsPerChar:t,alphabet:n})=>xe({prefix:e,name:r,encode(o){return Je(o,n,t)},decode(o){return Ke(o,n,t,r)}});var u=x({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),It=x({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Nt=x({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Bt=x({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Tt=x({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Vt=x({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Lt=x({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Rt=x({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Pt=x({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var H=85;var We=Ee,ve=128,Ge=127,Qe=~Ge,Xe=Math.pow(2,31);function Ee(r,e,t){e=e||[],t=t||0;for(var n=t;r>=Xe;)e[t++]=r&255|ve,r/=128;for(;r&Qe;)e[t++]=r&255|ve,r>>>=7;return e[t]=r|0,Ee.bytes=t-n+1,e}var Ze=Y,He=128,Ae=127;function Y(r,e){var t=0,e=e||0,n=0,o=e,s,a=r.length;do{if(o>=a)throw Y.bytes=0,new RangeError("Could not decode varint");s=r[o++],t+=n<28?(s&Ae)<<n:(s&Ae)*Math.pow(2,n),n+=7}while(s>=He);return Y.bytes=o-e,t}var Ye=Math.pow(2,7),qe=Math.pow(2,14),et=Math.pow(2,21),tt=Math.pow(2,28),rt=Math.pow(2,35),nt=Math.pow(2,42),ot=Math.pow(2,49),st=Math.pow(2,56),it=Math.pow(2,63),at=function(r){return r<Ye?1:r<qe?2:r<et?3:r<tt?4:r<rt?5:r<nt?6:r<ot?7:r<st?8:r<it?9:10},ct={encode:We,decode:Ze,encodingLength:at},dt=ct,N=dt;var B=r=>[N.decode(r),N.decode.bytes],O=(r,e,t=0)=>(N.encode(r,e,t),e),U=r=>N.encodingLength(r);var Se=(r,e)=>{let t=e.byteLength,n=U(r),o=n+U(t),s=new Uint8Array(o+t);return O(r,s,0),O(t,s,n),s.set(e,o),new V(r,t,e,s)},T=r=>{let e=D(r),[t,n]=B(e),[o,s]=B(e.subarray(n)),a=e.subarray(n+s);if(a.byteLength!==o)throw new Error("Incorrect length");return new V(t,o,a,e)},Ce=(r,e)=>r===e?!0:r.code===e.code&&r.size===e.size&&me(r.bytes,e.bytes),V=class{constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};var E=Z({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Ht=Z({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var d=class{constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this.byteOffset=o.byteOffset,this.byteLength=o.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:K,byteLength:K,code:F,version:F,multihash:F,bytes:F,_baseCache:K,asCID:K})}toV0(){switch(this.version){case 0:return this;default:{let{code:e,multihash:t}=this;if(e!==L)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==pt)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return d.createV0(t)}}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=Se(e,t);return d.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&Ce(this.multihash,e.multihash)}toString(e){let{bytes:t,version:n,_baseCache:o}=this;switch(n){case 0:return ft(t,o,e||E.encoder);default:return lt(t,o,e||u.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return yt(/^0\.0/,mt),!!(e&&(e[je]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof d)return e;if(e!=null&&e.asCID===e){let{version:t,code:n,multihash:o,bytes:s}=e;return new d(t,n,o,s||De(t,n,o.bytes))}else if(e!=null&&e[je]===!0){let{version:t,multihash:n,code:o}=e,s=T(n);return d.create(t,o,s)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(t!==L)throw new Error(`Version 0 CID must use dag-pb (code: ${L}) block encoding`);return new d(e,t,n,n.bytes)}case 1:{let o=De(e,t,n.bytes);return new d(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return d.create(0,L,e)}static createV1(e,t){return d.create(1,e,t)}static decode(e){let[t,n]=d.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=d.inspectBytes(e),n=t.size-t.multihashSize,o=D(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),a=new V(t.multihashCode,t.digestSize,s,o);return[t.version===0?d.createV0(a):d.createV1(t.codec,a),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[z,R]=B(e.subarray(t));return t+=R,z},o=n(),s=L;if(o===18?(o=0,t=0):o===1&&(s=n()),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let a=t,c=n(),h=n(),j=t+h,l=j-a;return{version:o,codec:s,multihashCode:c,digestSize:h,multihashSize:l,size:j}}static parse(e,t){let[n,o]=ht(e,t),s=d.decode(o);return s._baseCache.set(n,e),s}},ht=(r,e)=>{switch(r[0]){case"Q":{let t=e||E;return[E.prefix,t.decode(`${E.prefix}${r}`)]}case E.prefix:{let t=e||E;return[E.prefix,t.decode(r)]}case u.prefix:{let t=e||u;return[u.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}},ft=(r,e,t)=>{let{prefix:n}=t;if(n!==E.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o},lt=(r,e,t)=>{let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o},L=112,pt=18,De=(r,e,t)=>{let n=U(r),o=n+U(e),s=new Uint8Array(o+t.byteLength);return O(r,s,0),O(e,s,n),s.set(t,o),s},je=Symbol.for("@ipld/js-cid/CID"),F={writable:!1,configurable:!1,enumerable:!0},K={writable:!1,enumerable:!1,configurable:!1},ut="0.0.0-dev",yt=(r,e)=>{if(r.test(ut))console.warn(e);else throw new Error(e)},mt=`CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;var q=class extends I{constructor(){super();this.data={}}open(){return Promise.resolve()}close(){return Promise.resolve()}async put(e,t){this.data[u.encode(e.multihash.bytes)]=t}async get(e){if(!await this.has(e))throw W();return this.data[u.encode(e.multihash.bytes)]}async has(e){return this.data[u.encode(e.multihash.bytes)]!==void 0}async delete(e){delete this.data[u.encode(e.multihash.bytes)]}async*_all(){yield*Object.entries(this.data).map(([e,t])=>({key:d.createV1(H,T(u.decode(e))),value:t}))}async*_allKeys(){yield*Object.entries(this.data).map(([e])=>d.createV1(H,T(u.decode(e))))}};var wt={...G};return bt;})();
return BlockstoreCore}));
