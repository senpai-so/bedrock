'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var errcode = require('err-code');
var toString = require('uint8arrays/to-string');
var fromString = require('uint8arrays/from-string');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var errcode__default = /*#__PURE__*/_interopDefaultLegacy(errcode);

const namespace = '/record/';
function encodeBase32(buf) {
  return toString.toString(buf, 'base32');
}
function keyToTopic(key) {
  if (typeof key === 'string' || key instanceof String) {
    key = fromString.fromString(key.toString());
  }
  const b64url = toString.toString(key, 'base64url');
  return `${ namespace }${ b64url }`;
}
function topicToKey(topic) {
  if (topic.substring(0, namespace.length) !== namespace) {
    throw errcode__default['default'](new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');
  }
  const key = topic.substring(namespace.length);
  return fromString.fromString(key, 'base64url');
}

exports.encodeBase32 = encodeBase32;
exports.keyToTopic = keyToTopic;
exports.topicToKey = topicToKey;
