export { BaseDatastore } from "./base.js";
export { MemoryDatastore } from "./memory.js";
export { KeyTransformDatastore } from "./keytransform.js";
export { ShardingDatastore } from "./sharding.js";
export { MountDatastore } from "./mount.js";
export { TieredDatastore } from "./tiered.js";
export { NamespaceDatastore } from "./namespace.js";
export const Errors: {
    dbOpenFailedError(err?: Error | undefined): Error & import("err-code").Extensions;
    dbDeleteFailedError(err?: Error | undefined): Error & import("err-code").Extensions;
    dbWriteFailedError(err?: Error | undefined): Error & import("err-code").Extensions;
    notFoundError(err?: Error | undefined): Error & import("err-code").Extensions;
    abortedError(err?: Error | undefined): Error & import("err-code").Extensions;
};
export const shard: {
    parseShardFun(str: string): import("./types").Shard;
    PREFIX: "/repo/flatfs/shard/";
    SHARDING_FN: "SHARDING";
    README_FN: "_README";
    ShardBase: typeof ShardImport.ShardBase;
    Prefix: typeof ShardImport.Prefix;
    Suffix: typeof ShardImport.Suffix;
    NextToLast: typeof ShardImport.NextToLast;
    readShardFun: (path: string | Uint8Array, store: import("interface-datastore").Datastore) => Promise<import("./types").Shard>;
    readme: "This is a repository of IPLD objects. Each IPLD object is in a single file,\nnamed <base32 encoding of cid>.data. Where <base32 encoding of cid> is the\n\"base32\" encoding of the CID (as specified in\nhttps://github.com/multiformats/multibase) without the 'B' prefix.\nAll the object files are placed in a tree of directories, based on a\nfunction of the CID. This is a form of sharding similar to\nthe objects directory in git repositories. Previously, we used\nprefixes, we now use the next-to-last two charters.\n    func NextToLast(base32cid string) {\n      nextToLastLen := 2\n      offset := len(base32cid) - nextToLastLen - 1\n      return str[offset : offset+nextToLastLen]\n    }\nFor example, an object with a base58 CIDv1 of\n    zb2rhYSxw4ZjuzgCnWSt19Q94ERaeFhu9uSqRgjSdx9bsgM6f\nhas a base32 CIDv1 of\n    BAFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA\nand will be placed at\n    SC/AFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA.data\nwith 'SC' being the last-to-next two characters and the 'B' at the\nbeginning of the CIDv1 string is the multibase prefix that is not\nstored in the filename.\n";
};
export type Shard = import("./types").Shard;
export type KeyTransform = import("./types").KeyTransform;
import * as ShardImport from "./shard.js";
//# sourceMappingURL=index.d.ts.map